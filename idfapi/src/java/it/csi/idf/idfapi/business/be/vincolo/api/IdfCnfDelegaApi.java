/*
 * Created on 2020-10-04 ( Time 21:09:07 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package it.csi.idf.idfapi.business.be.vincolo.api;

import java.util.List;

//--- Entities


//--- Services 
//import it.csi.idf.idfapi.validation.service.PersistenceServiceProvider;



import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import it.csi.idf.idfapi.business.be.vincolo.pojo.IdfCnfDelega;

/**
 * JAXRS Jersey controller for 'IdfCnfDelega'Api management.
 */
@Path("/idfCnfDelega")
public interface IdfCnfDelegaApi {
	
	/**
	 * Get all idfCnfDelega entities.
	 * @return list with all entities found
	 */
	@GET
	@Produces({MediaType.APPLICATION_JSON})
	public List<IdfCnfDelega> findAll() ;

	/**
	 * Retrieves a idfCnfDelega using the given id.
	 * @param cfDelegante cfDelegante
	 * @param idConfigUtente idConfigUtente
	 * @return 200 + body if found, 404 if not found 
	 */
	@GET
	@Path("{cfDelegante}/{idConfigUtente}")
	@Produces({MediaType.APPLICATION_JSON})
	public Response findById(@PathParam("cfDelegante") String cfDelegante, @PathParam("idConfigUtente") Integer idConfigUtente) ;
	/**
	 * Creates a new idfCnfDelega.
	 * @param idfCnfDelega idfCnfDelega
	 * @return 201 with body if created, 409 conflict if duplicate key 
	 */	
	@POST
	@Consumes({MediaType.APPLICATION_JSON})
	@Produces({MediaType.APPLICATION_JSON})
	public Response create(IdfCnfDelega idfCnfDelega) ;

//------------------------------------------------------------
	
	/**
	 * Updates the idfCnfDelega identified by the given id
	 * @param idfCnfDelega idfCnfDelega entity
	 * @param cfDelegante cfDelegante 
	 * @param idConfigUtente idConfigUtente 
	 * @return 200 if found and updated, 404 if not found 
	 */	
	@PUT
	@Path("{cfDelegante}/{idConfigUtente}")
	@Consumes({MediaType.APPLICATION_JSON})
	@Produces({MediaType.APPLICATION_JSON})
	// public IdfCnfDelega update(IdfCnfDelega idfCnfDelega, @PathParam("cfDelegante") String cfDelegante, @PathParam("idConfigUtente") Integer idConfigUtente) {
	public Response update(IdfCnfDelega idfCnfDelega, @PathParam("cfDelegante") String cfDelegante, @PathParam("idConfigUtente") Integer idConfigUtente); 
		// force the id (use the id provided by the URL)
		// idfCnfDelega.setCfDelegante( cfDelegante );
		// idfCnfDelega.setIdConfigUtente( idConfigUtente );
		
	/**
	 * Save (create or update) the given idfCnfDelega.
	 * @param idfCnfDelega idfCnfDelega entity
	 * @return 200 if found and updated, 201 if not found and created
	 */	
	@PUT
	@Consumes({MediaType.APPLICATION_JSON})
	@Produces({MediaType.APPLICATION_JSON})
	public Response save(IdfCnfDelega idfCnfDelega) ;

//------------------------------------------------------------
	/**
	 * Delete a idfCnfDelega.
	 * @param cfDelegante cfDelegante
	 * @param idConfigUtente idConfigUtente
	 */
	@DELETE
	@Path("{cfDelegante}/{idConfigUtente}")
	//@Consumes({MediaType.APPLICATION_JSON})
	// public void delete(@PathParam("cfDelegante") String cfDelegante, @PathParam("idConfigUtente") Integer idConfigUtente) {
	public Response delete(@PathParam("cfDelegante") String cfDelegante, @PathParam("idConfigUtente") Integer idConfigUtente) ;
		// idfCnfDelegaService.deleteById(cfDelegante, idConfigUtente);
		

	

}
